Hybrid技术进阶

简述
通过在网上查阅相关资料，对比分析金融支付hybrid、阿里去啊hybrid和支付包hybrid，对比分析其中的不足之处以及可以在金融支付hybrid的可以改进的点进行罗列以及尝试，希望在后续能够将这些方向的内容实现

目前已解决问题：
可以访问h5页面；
可以访问线上或线下页面；
可以对本地h5压缩包进行更新；
可以调用natvie接口；

目前遇到的比较大的问题：
1.WebView性能问题
原生WebView性能确实较差，并没有好的解决方案。
2.资源加载速度问题
1.利用WebView自己的缓存机制进行资源的缓存
存在资源下载速度问题（首次加载会受到网速的影响。目前的zip压缩包的方式虽然能够解决部分）
通过预先打包资源，使得部分资源在本地进行访问
2.是否用本地方法替换js方法的加载
x.跳过WebView，使用更激进的方式，使用原生控件（weex框架）
3.流量节省

1.跨域问题解决：通过本地进行http请求解决
2.本地资源文件读取？
3.登录状态判断，基本上所有应用都与flyme账户有关
4.增量/全量更新机制
5.如何利用原生特性
6.如何使js调用更方便，清晰-调用的直接返回
7.h5资源包推送更新是否合适？
8.共用资源、库的分别单独打包

性能指标：
1.元素加载时间
2.接口流量消耗
3.接口耗时
4.容器加载时间

测试：
支付宝：appium
自动化获取性能数据
anyproxy

